/* cmdline.h */

/* File autogenerated by gengetopt version 2.10  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "syrep"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION VERSION
#endif

struct gengetopt_args_info
{
  int verbose_flag;	/* Enable verbose operation (default=off).  */
  int local_temp_flag;	/* Use temporary directory inside repository (default=off).  */
  int ignore_origin_flag;	/* Don't warn if snapshot not local in update, merge, makepatch (default=off).  */
  int compress_flag;	/* Compress snapshots or patches (default=off).  */
  int list_flag;	/* List a repository snapshot (default=off).  */
  int show_deleted_flag;	/* list: Show deleted entries of repository snapshot (default=off).  */
  int show_by_md_flag;	/* list: Show files by message digests (default=off).  */
  int show_times_flag;	/* list: Show first and last seen times (default=off).  */
  int sort_flag;	/* list: sort chronologically (default=off).  */
  int info_flag;	/* Show information about a repository or snapshot (default=off).  */
  int history_flag;	/* Show history of a repository or snapshot (default=off).  */
  int dump_flag;	/* Show a structure dump of a repository or snapshot (default=off).  */
  int update_flag;	/* Update a repository snapshot (default=off).  */
  char * snapshot_arg;	/* update: Use the specified snapshot file instead of the one contained in the repository.  */
  char * cache_arg;	/* update: Use the specified cache file instead of the one contained in the repository.  */
  int no_cache_flag;	/* update: Don't use a message digest cache (default=off).  */
  int no_purge_flag;	/* update: Don't pruge obsolete entries from cache after update run (default=off).  */
  int ro_cache_flag;	/* update: Use read only cache (default=off).  */
  int progress_flag;	/* update: Show progress (default=off).  */
  int diff_flag;	/* Show difference between two repositories or snapshots (default=off).  */
  int sizes_flag;	/* diff: show file sizes to copy (works online on repositories) (default=off).  */
  int human_readable_flag;	/* diff: show sizes human readable (default=off).  */
  int merge_flag;	/* Merge a snapshot or a repository into a repository (default=off).  */
  int question_flag;	/* merge: Ask a question before each action (default=off).  */
  int prune_empty_flag;	/* merge: Prune empty directories (default=off).  */
  int keep_trash_flag;	/* merge: Don't empty trash (default=off).  */
  int check_md_flag;	/* merge: Check message digest of file before deleting or replacing (default=off).  */
  int always_copy_flag;	/* merge: Always copy instead of hard linking (default=off).  */
  int makepatch_flag;	/* Make a patch against the specified repository (default=off).  */
  char * output_file_arg;	/* makepatch: Write output to specified file instead of STDOUT.  */
  int include_all_flag;	/* makepatch: Include files in patch which do exist on the other side under a different name (default=off).  */
  int extract_flag;	/* Extract the context of a snapshot or patch (default=off).  */
  char * output_directory_arg;	/* extract: Write output to specified directory.  */
  int cleanup_flag;	/* Remove syrep info from repository (default=off).  */
  int cleanup_level_arg;	/* cleanup: 1 - just remove temporary data and trash (default); 2 - remove MD cache as well; 3 - remove all syrep data (default='1').  */
  int forget_flag;	/* Forget old snapshot entries (default=off).  */
  int remember_arg;	/* forget: information of how many days to remeber (default='180').  */

  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int local_temp_given ;	/* Whether local-temp was given.  */
  int ignore_origin_given ;	/* Whether ignore-origin was given.  */
  int compress_given ;	/* Whether compress was given.  */
  int list_given ;	/* Whether list was given.  */
  int show_deleted_given ;	/* Whether show-deleted was given.  */
  int show_by_md_given ;	/* Whether show-by-md was given.  */
  int show_times_given ;	/* Whether show-times was given.  */
  int sort_given ;	/* Whether sort was given.  */
  int info_given ;	/* Whether info was given.  */
  int history_given ;	/* Whether history was given.  */
  int dump_given ;	/* Whether dump was given.  */
  int update_given ;	/* Whether update was given.  */
  int snapshot_given ;	/* Whether snapshot was given.  */
  int cache_given ;	/* Whether cache was given.  */
  int no_cache_given ;	/* Whether no-cache was given.  */
  int no_purge_given ;	/* Whether no-purge was given.  */
  int ro_cache_given ;	/* Whether ro-cache was given.  */
  int progress_given ;	/* Whether progress was given.  */
  int diff_given ;	/* Whether diff was given.  */
  int sizes_given ;	/* Whether sizes was given.  */
  int human_readable_given ;	/* Whether human-readable was given.  */
  int merge_given ;	/* Whether merge was given.  */
  int question_given ;	/* Whether question was given.  */
  int prune_empty_given ;	/* Whether prune-empty was given.  */
  int keep_trash_given ;	/* Whether keep-trash was given.  */
  int check_md_given ;	/* Whether check-md was given.  */
  int always_copy_given ;	/* Whether always-copy was given.  */
  int makepatch_given ;	/* Whether makepatch was given.  */
  int output_file_given ;	/* Whether output-file was given.  */
  int include_all_given ;	/* Whether include-all was given.  */
  int extract_given ;	/* Whether extract was given.  */
  int output_directory_given ;	/* Whether output-directory was given.  */
  int cleanup_given ;	/* Whether cleanup was given.  */
  int cleanup_level_given ;	/* Whether cleanup-level was given.  */
  int forget_given ;	/* Whether forget was given.  */
  int remember_given ;	/* Whether remember was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
